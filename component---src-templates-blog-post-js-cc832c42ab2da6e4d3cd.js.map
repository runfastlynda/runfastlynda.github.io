{"version":3,"sources":["webpack:///./src/components/utterances.js","webpack:///./src/templates/blog-post.js"],"names":["Utterances","React","memo","slug","useState","loaded","setLoaded","utterancesRef","useRef","useEffect","window","el","document","createElement","current","src","async","setAttribute","onload","appendChild","remove","key","className","ref","pageQuery","BlogPostTemplate","data","pageContext","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","frontmatter","style","marginTop","rhythm","marginBottom","scale","display","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","fields","rel"],"mappings":"yPAkDeA,EA/CIC,IAAMC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAAW,EACdC,oBAAS,GAA9BC,EADmC,KAC3BC,EAD2B,KAEpCC,EAAgBC,mBAyBtB,OAxBAC,qBAAU,WACR,GAAsB,oBAAXC,OAAX,CAGAJ,GAAU,GACV,IAAMK,EAAKC,SAASC,cAAc,UAclC,OAbIN,EAAcO,UAChBH,EAAGI,IAAM,gCACTJ,EAAGK,OAAQ,EACXL,EAAGM,aAAa,OAAQ,uCACxBN,EAAGM,aAAa,aAAcd,GAC9BQ,EAAGM,aAAa,QAAS,WACzBN,EAAGM,aAAa,QAAS,gBACzBN,EAAGM,aAAa,cAAe,aAC/BN,EAAGO,OAAS,WACVZ,GAAU,IAEZC,EAAcO,QAAQK,YAAYR,IAE7B,WACLA,EAAGS,aAEJ,CAACjB,IAGF,6BAASkB,IAAKlB,EAAMmB,UAAU,UAAUC,IAAKhB,GAC1CF,GACC,yBAAKiB,UAAU,qBACb,yBAAKA,UAAU,uBACb,uBAAGA,UAAU,aAAb,kBACA,uBAAGA,UAAU,aAAb,kDCoDCE,G,UAFEC,UA1EU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOH,EAAKI,eACZC,EAAYL,EAAKM,KAAKC,aAAaC,MACjCC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAElB,OACE,kBAAC,IAAD,CAAQR,SAAUA,EAAUM,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAOL,EAAKQ,YAAYH,QAG1B,iCACE,gCACE,wBACEI,MAAO,CACLC,UAAWC,YAAO,GAClBC,aAAc,IAGfZ,EAAKQ,YAAYH,OAEpB,uBACEI,MAAK,iBACAI,aAAM,IADN,CAEHC,QAAQ,QACRF,aAAcD,YAAO,MAGtBX,EAAKQ,YAAYO,OAGtB,6BAASC,wBAAyB,CAAEC,OAAQjB,EAAKkB,QACjD,wBACET,MAAO,CACLG,aAAcD,YAAO,MAGzB,gCACE,kBAAC,IAAD,QAIJ,6BACE,wBACEF,MAAO,CACLK,QAAQ,OACRK,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGhB,GACC,kBAAC,OAAD,CAAMiB,GAAIjB,EAASkB,OAAOlD,KAAMmD,IAAI,QAApC,KACKnB,EAASE,YAAYH,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAMgB,GAAIhB,EAAKiB,OAAOlD,KAAMmD,IAAI,QAC7BlB,EAAKC,YAAYH,MADpB,SAQR,kBAAC,EAAD,CAAY/B,KAAM0B,EAAKwB,OAAOlD,SAOd","file":"component---src-templates-blog-post-js-cc832c42ab2da6e4d3cd.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Utterances = React.memo(({ slug }) => {\n  const [loaded, setLoaded] = useState(false)\n  const utterancesRef = useRef()\n  useEffect(() => {\n    if (typeof window === 'undefined') {\n      return\n    }\n    setLoaded(false)\n    const el = document.createElement('script')\n    if (utterancesRef.current) {\n      el.src = 'https://utteranc.es/client.js'\n      el.async = true\n      el.setAttribute('repo', 'runfastlynda/runfastlynda.github.io')\n      el.setAttribute('issue-term', slug)\n      el.setAttribute('label', 'Comment')\n      el.setAttribute('theme', 'github-light')\n      el.setAttribute('crossorigin', 'anonymous')\n      el.onload = () => {\n        setLoaded(true)\n      }\n      utterancesRef.current.appendChild(el)\n    }\n    return () => {\n      el.remove()\n    }\n  }, [slug])\n\n  return (\n    <section key={slug} className='section' ref={utterancesRef}>\n      {loaded || (\n        <div className='has-text-centered'>\n          <div className='box is-inline-block'>\n            <p className='is-size-6'>评论没有加载，检查你的局域网</p>\n            <p className='is-size-7'>\n              Cannot load comments. Check you network.\n            </p>\n          </div>\n        </div>\n      )}\n    </section>\n  )\n})\n\nUtterances.propTypes = {\n  slug: PropTypes.string.isRequired\n}\n\nexport default Utterances\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nimport Utterances from '../components/utterances'\n\nimport 'prismjs/themes/prism-coy.css'\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        // description={post.frontmatter.description || post.excerpt}\n      />\n      <article>\n        <header>\n          <h1\n            style={{\n              marginTop: rhythm(1),\n              marginBottom: 0,\n            }}\n          >\n            {post.frontmatter.title}\n          </h1>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            {post.frontmatter.date}\n          </p>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n\n      <Utterances slug={post.fields.slug} />\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`\n"],"sourceRoot":""}
{"componentChunkName":"component---src-templates-blog-post-js","path":"/2015-08-26-read-source-code-of-2048-5/","result":{"data":{"site":{"siteMetadata":{"title":"runfastlynda"}},"markdownRemark":{"id":"1609a84c-1cd4-5c80-8ea4-37de0980bf39","excerpt":"2048源码解读系列最后一篇，我们来解读最重要的 GameManager 部分。 GameManager函数有如下结构： 函数输入了size, InputManager, Actuator, StorageManager这四个参数，这都是之前我们解读过的，\n参数传入后，size 赋值给当前对象的size…","html":"<p>2048源码解读系列最后一篇，我们来解读最重要的 GameManager 部分。</p>\n<p>GameManager函数有如下结构：<img src=\"http://7xjufd.dl1.z0.glb.clouddn.com/blog5.1.png\"></p>\n<p>函数输入了size, InputManager, Actuator, StorageManager这四个参数，这都是之前我们解读过的，\n参数传入后，size 赋值给当前对象的size，其他三个参数通过new命令调用了构造函数，返回三个实例对象，\n初始化tile开始时为2个，绑定inputmanager的move，restart，keepPlaying到当前对象，\n最后是重要的setup函数。</p>\n<h5>setup函数</h5>\n<p>setup函数定义游戏的执行方法，首先从storageManager里获取游戏的状态，如果存在，\n把相应的状态信息传入，否则，初始化这些状态信息。然后开始执行游戏：actuate()。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token class-name\">GameManager</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setup</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//取得游戏状态</span>\n  <span class=\"token keyword\">var</span> previousState <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>storageManager<span class=\"token punctuation\">.</span><span class=\"token function\">getGameState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 如果存在，那么加载之前的游戏。否则初始化游戏的开始状态</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>previousState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>grid        <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Grid</span><span class=\"token punctuation\">(</span>previousState<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">,</span>\n                            previousState<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">.</span>cells<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Reload grid</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>score       <span class=\"token operator\">=</span> previousState<span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>over        <span class=\"token operator\">=</span> previousState<span class=\"token punctuation\">.</span>over<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>won         <span class=\"token operator\">=</span> previousState<span class=\"token punctuation\">.</span>won<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>keepPlaying <span class=\"token operator\">=</span> previousState<span class=\"token punctuation\">.</span>keepPlaying<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>grid        <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Grid</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>score       <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>over        <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>won         <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>keepPlaying <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// 添加tile</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">addStartTiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">actuate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>这里定义了添加初始tile的方法</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 设置初始tile开始游戏</span>\n<span class=\"token class-name\">GameManager</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">addStartTiles</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>startTiles<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">addRandomTile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 在随机位置添加一个tile，这里给tile添加值用Math.random()的方法，</span>\n取得在<span class=\"token number\">0</span><span class=\"token operator\">~</span><span class=\"token number\">1</span>之间的随机数，如果小于<span class=\"token number\">0.9</span>，值为<span class=\"token number\">2</span>，否则值为<span class=\"token number\">4.</span>\n<span class=\"token class-name\">GameManager</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">addRandomTile</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">.</span><span class=\"token function\">cellsAvailable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> value <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.9</span> <span class=\"token operator\">?</span> <span class=\"token number\">2</span> <span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> tile <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Tile</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">.</span><span class=\"token function\">randomAvailableCell</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">.</span><span class=\"token function\">insertTile</span><span class=\"token punctuation\">(</span>tile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h5>move函数</h5>\n<p>移动行为对应函数，保存当前tile位置，定义了合并行为，如果相邻的两个tile的值存在且相等，\n更新成绩位置</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token class-name\">GameManager</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">move</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">direction</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 使用中间变量固定this对象</span>\n  <span class=\"token keyword\">var</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">isGameTerminated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 如果游戏结束，不做任何事情</span>\n\n  <span class=\"token keyword\">var</span> cell<span class=\"token punctuation\">,</span> tile<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> vector     <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getVector</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> traversals <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">buildTraversals</span><span class=\"token punctuation\">(</span>vector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> moved      <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 保存当前tile位置并删除合并信息</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">prepareTiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 在正确的方向上移动网格和移动的tile</span>\n  traversals<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    traversals<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      cell <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> y <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      tile <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">.</span><span class=\"token function\">cellContent</span><span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tile<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> positions <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span><span class=\"token function\">findFarthestPosition</span><span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">,</span> vector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> next      <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">.</span><span class=\"token function\">cellContent</span><span class=\"token punctuation\">(</span>positions<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 定义了合并行为，如果相邻的两个tile的值存在且相等，</span>\n        先生成新的tile，保存信息，然后删除当前的两个tile\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>next <span class=\"token operator\">&amp;&amp;</span> next<span class=\"token punctuation\">.</span>value <span class=\"token operator\">===</span> tile<span class=\"token punctuation\">.</span>value <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>next<span class=\"token punctuation\">.</span>mergedFrom<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">var</span> merged <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Tile</span><span class=\"token punctuation\">(</span>positions<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">,</span> tile<span class=\"token punctuation\">.</span>value <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          merged<span class=\"token punctuation\">.</span>mergedFrom <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>tile<span class=\"token punctuation\">,</span> next<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n          self<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">.</span><span class=\"token function\">insertTile</span><span class=\"token punctuation\">(</span>merged<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          self<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">.</span><span class=\"token function\">removeTile</span><span class=\"token punctuation\">(</span>tile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n          <span class=\"token comment\">// 更新两个tile位置</span>\n          tile<span class=\"token punctuation\">.</span><span class=\"token function\">updatePosition</span><span class=\"token punctuation\">(</span>positions<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n          <span class=\"token comment\">// 更新成绩</span>\n          self<span class=\"token punctuation\">.</span>score <span class=\"token operator\">+=</span> merged<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>merged<span class=\"token punctuation\">.</span>value <span class=\"token operator\">===</span> <span class=\"token number\">2048</span><span class=\"token punctuation\">)</span> self<span class=\"token punctuation\">.</span>won <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            self<span class=\"token punctuation\">.</span><span class=\"token function\">moveTile</span><span class=\"token punctuation\">(</span>tile<span class=\"token punctuation\">,</span> positions<span class=\"token punctuation\">.</span>farthest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>self<span class=\"token punctuation\">.</span><span class=\"token function\">positionsEqual</span><span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">,</span> tile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            moved <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// tile从原来的cell移动！</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h5>buildTraversals</h5>\n<p>构建一个以正确的顺序遍历的位置列表，是实行move函数的具体细节</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token class-name\">GameManager</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">buildTraversals</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">vector</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> traversals <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> pos <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> pos <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span> pos<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    traversals<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    traversals<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 总是从最远的单元格中选择方向</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>vector<span class=\"token punctuation\">.</span>x <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> traversals<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> traversals<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>vector<span class=\"token punctuation\">.</span>y <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> traversals<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> traversals<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> traversals<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h5>findFarthestPosition函数</h5>\n<p>合并动作，合并相同的tile，直到不能合并</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token class-name\">GameManager</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">findFarthestPosition</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">cell<span class=\"token punctuation\">,</span> vector</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> previous<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 朝着矢量方向前进，直到找到一个障碍物</span>\n  <span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span>\n    previous <span class=\"token operator\">=</span> cell<span class=\"token punctuation\">;</span>\n    cell     <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> previous<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> vector<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> previous<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> vector<span class=\"token punctuation\">.</span>y <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">.</span><span class=\"token function\">withinBounds</span><span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">.</span><span class=\"token function\">cellAvailable</span><span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      farthest<span class=\"token operator\">:</span> previous<span class=\"token punctuation\">,</span>\n      next<span class=\"token operator\">:</span> cell <span class=\"token comment\">// Used to check if a merge is required  用于检查是否需要合并</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h5>tileMatchesAvailable函数</h5>\n<p>检查可用的匹配之间的tile</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token class-name\">GameManager</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">tileMatchesAvailable</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> tile<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span> y<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      tile <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">.</span><span class=\"token function\">cellContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> y <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tile<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> direction <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> direction <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> direction<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">var</span> vector <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span><span class=\"token function\">getVector</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">var</span> cell   <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> x <span class=\"token operator\">+</span> vector<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> y <span class=\"token operator\">+</span> vector<span class=\"token punctuation\">.</span>y <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n          <span class=\"token keyword\">var</span> other  <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">.</span><span class=\"token function\">cellContent</span><span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>other <span class=\"token operator\">&amp;&amp;</span> other<span class=\"token punctuation\">.</span>value <span class=\"token operator\">===</span> tile<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 返回ture，就可以合并</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 否则不合并</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"2048源代码解读（5）","date":"August 26, 2015"},"fields":{"slug":"/2015-08-26-read-source-code-of-2048-5/"}}},"pageContext":{"slug":"/2015-08-26-read-source-code-of-2048-5/","previous":{"fields":{"slug":"/2015-08-19-read-source-code-of-2048-4/"},"frontmatter":{"title":"2048源代码解读（4）","tags":["源码阅读"]}},"next":{"fields":{"slug":"/2015-08-26-collapsing-margins/"},"frontmatter":{"title":"说说Collapsing Margins","tags":["CSS"]}}}}}
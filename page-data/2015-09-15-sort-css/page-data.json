{"componentChunkName":"component---src-templates-blog-post-js","path":"/2015-09-15-sort-css/","result":{"data":{"site":{"siteMetadata":{"title":"runfastlynda"}},"markdownRemark":{"id":"2480d483-cc62-599a-88cb-66cd8748ecc5","excerpt":"css样式排序 CSS样式排序是指按照一定的规则排列CSS样式属性的定义，CSS样式排序有如下优点： 有助于保持你的编码风格。 为了保持一致性，这对于长期项目，在这种代码下不断进行编辑，改写非常重要的。 帮助你理解的代码。 你写的代码，你的同事或其他程序员会预见的排序，因此，更容易理解。 找到CSS…","html":"<h3>css样式排序</h3>\n<p>CSS样式排序是指按照一定的规则排列CSS样式属性的定义，CSS样式排序有如下优点：</p>\n<ul>\n<li>有助于保持你的编码风格。</li>\n</ul>\n<p>为了保持一致性，这对于长期项目，在这种代码下不断进行编辑，改写非常重要的。</p>\n<ul>\n<li>帮助你理解的代码。</li>\n</ul>\n<p>你写的代码，你的同事或其他程序员会预见的排序，因此，更容易理解。</p>\n<ul>\n<li>找到CSS属性更快。</li>\n</ul>\n<p>你会知道一个CSS属性确切位置，将减少的不必要的努力。</p>\n<h4>常见的CSS定义排序方式</h4>\n<h5>按类型分组排序</h5>\n<p>这种排序方式最复杂，却也是最合理的方式。\n国外著名的Web前端专家Andy Ford推荐过一种按照类型分组排序的方式，\n他把CSS属性分为7大类：</p>\n<ul>\n<li>显示与浮动（Diplay&#x26;Float）</li>\n<li>定位（Position）</li>\n<li>尺寸（Width、Height）</li>\n<li>边框相关属性（Margins、Padding、Borders）</li>\n<li>字体样式（ont）</li>\n<li>背景（Background）</li>\n<li>其他样式（Opacity、Cursors、Generated Content）。</li>\n</ul>\n<p>随着CSS3的普及，CSS样式中也添加了很多新的属性，这些新的属性也可以按照如上的规则归类到不同的类别中，如：text- shadow可以归类到字体样式中；border-radius可以归类为边框相关属性等。</p>\n<h5>按字母序排列</h5>\n<p>按字母序排列的方式也是CSS排序中使用较多的一种方式。相比较于前一种方式，\n这种方式的优点是排列规则简单。按字母序排列的规则是按照属性的首字母从A到Z排列，\n忽略浏览器前缀（如：-webkit-、-moz-、-o-以及-ms-）。如下是一个按照字母序排列的例子：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">#div</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">-webkit-border-radius</span><span class=\"token punctuation\">:</span> 2px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">-moz-border-radius</span><span class=\"token punctuation\">:</span> 2px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 2px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #FFF<span class=\"token punctuation\">;</span>  \n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Times New Roman\"</span><span class=\"token punctuation\">,</span> serif<span class=\"token punctuation\">;</span>  \n    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span>  \n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>  \n    <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>  \n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">}</span></code></pre></div>\n<h5>按定义长度排序</h5>\n<p>这种排序方式是使用较少的一种方式。\n和按照字母序排列的方式类似，这种方式是按照样式定义的字符长度排列。\n排列的方式可以从长到短，也可以是从短到长。如下的例子将按照定义由长到短排列：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">#element</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Times New Roman\"</span><span class=\"token punctuation\">,</span> serif<span class=\"token punctuation\">;</span>  \n    <span class=\"token property\">-webkit-border-radius</span><span class=\"token punctuation\">:</span> 4px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">-moz-border-radius</span><span class=\"token punctuation\">:</span> 4px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 4px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span>  \n    <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>  \n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span>  \n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>  \n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #FFF<span class=\"token punctuation\">;</span>  \n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>以上三种常见的CSS排序方式中，第一种最为合理，代码的可读性和可维护性也是最好的，但是规则相对复杂。其余两种方式规则简单，但仅仅是让代码看起来更整洁，并没有提高多少代码的可维护性。在实际的应用中，推荐使用第一种排列方式。</p>\n<h4>工具</h4>\n<p>纯粹是靠前端工程师在编写代码过程中按照一定的规则来排列CSS是很麻烦的，\n最佳的方式是在编写代码过程中按照最有效率的方式来编写，\n在编写完成并提交代码时使用工具给CSS排序。\n这样即提高了开发效率又方便了后续代码的阅读和维护。\n推荐一款免费的CSS排序工具：CSScomb 。CSScomb提供了在线工具及主流代码编辑器的插件。如果你想使用它，下载相应的插件即可。</p>\n<p>例如：我使用的是sublime text 编辑器</p>\n<ul>\n<li><code class=\"language-text\">cmd</code>+<code class=\"language-text\">shift</code>+<code class=\"language-text\">p</code> 打开命令板</li>\n<li>输入<code class=\"language-text\">install package</code></li>\n<li>输入<code class=\"language-text\">CSScomb</code>单击下载</li>\n</ul>","frontmatter":{"title":"CSS技巧之CSS样式排序","date":"September 15, 2015"}}},"pageContext":{"slug":"/2015-09-15-sort-css/","previous":{"fields":{"slug":"/2015-09-14-css-tricks-fixed-background/"},"frontmatter":{"title":"CSS技巧之固定背景","tags":["CSS"]}},"next":{"fields":{"slug":"/2015-09-15-css-tricks-center-elements/"},"frontmatter":{"title":"CSS技巧之居中元素的几种方法","tags":null}}}}}
{"componentChunkName":"component---src-templates-blog-post-js","path":"/2015-09-15-css-tricks-center-elements/","result":{"data":{"site":{"siteMetadata":{"title":"runfastlynda"}},"markdownRemark":{"id":"96e20b77-9695-5ab4-9024-da785889bfbe","excerpt":"居中元素我们经常会用到，下面介绍下各种情况下居中元素的方法。 居中一个行内元素 常用的行内元素有 span,   strong,   em,  br,  img ,  input,  label,  select,  textarea…","html":"<p>居中元素我们经常会用到，下面介绍下各种情况下居中元素的方法。</p>\n<h3>居中一个行内元素</h3>\n<p>常用的行内元素有 span,   strong,   em,  br,  img ,  input,  label,  select,  textarea等等，        </p>\n<h5>行内元素的特点：</h5>\n<ul>\n<li>行内元素不会独占一行，相邻的行内元素会排列在同一行里，直到一行排不下，才会换行，其宽度随元素的内容而变化。</li>\n<li>行内元素设置width,  height无效</li>\n<li>行内元素的水平方向的padding-left,padding-right,margin-left,margin-right 都产生边距效果，但是竖直方向的padding-top,padding-bottom,margin-top,margin-bottom都不会产生边距效果。</li>\n</ul>\n<p>如果要把行内元素居中，只需要把行内元素包裹在一个属性display为block的父层元素中，并且把父层元素添加如下属性便可以实现居中的效果：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span></code></pre></div>\n<p>这个简单的方法通常用在段落或者标题中的文稿内居中字句， 例如：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">P</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center <span class=\"token punctuation\">}</span></code></pre></div>\n<h3>居中一个块级元素</h3>\n<p>有时侯并不是文稿需要居中排列,\n而是把文本块作为一个整体居中排列，或者说, 我们居中一个块级元素。</p>\n<p>块级元素和行内元素不同，块级元素会独占一行，可以设置 width, height属性，可以设置margin 和 padding。</p>\n<p>居中一个块级元素有一个特备重要的地方：给div设置一个宽度，然后添加margin:0 auto属性才会有效，就像这里：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">div</span><span class=\"token punctuation\">{</span>\n        <span class=\"token property\">width</span><span class=\"token punctuation\">:</span>200px<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span>0 auto<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span></code></pre></div>\n<h5>最终效果</h5>\n<p><a href=\"http://codepen.io/runfastlynda/pen/epJByp?editors=110\">codepen在线demo</a> 居中了页面的图像。</p>\n<h5>使用技巧：居中外包围框</h5>\n<p>在支持响应式布局的页面中，添加一个外包围边框，可以方便的改变内部所有的元素宽度，\n只需要调整外包围框的宽度便可以，非常有效！</p>\n<p>页面的外包围框有几个作用：</p>\n<ul>\n<li>居中内容</li>\n<li>围框里所有 block 元素的默认宽度是充满父容器的宽度，不需要个别为每个元素设置宽度。</li>\n</ul>\n<h3>绝对定位元素的居中实现</h3>\n<p>使用CSS实现绝对定位元素的居中效果，兼容性不错的主流用法是：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.element</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> -200px<span class=\"token punctuation\">;</span>    <span class=\"token comment\">/* 高度的一半 */</span>\n    <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> -200px<span class=\"token punctuation\">;</span>    <span class=\"token comment\">/* 宽度的一半 */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>可是这种方法有一个很明显的不足，就是需要提前知道元素的尺寸。否则margin负值的调整无法精确。\n此时，往往要借助JS获得。</p>\n<p>CSS3的兴起，使得绝对定位元素的居中实现有了更好的解决方法，就是使用transform代替margin。</p>\n<p>transform中translate偏移的百分比值是相对于自身大小的，于是，我们可以：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.element</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>-50%<span class=\"token punctuation\">,</span> -50%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">/* 50%为自身尺寸的一半 */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>于是，无论绝对定位元素的尺寸是多少，其都是水平垂直居中显示的。\n当然这种方法的兼容性不好。</p>\n<h3>居中一个浮动元素</h3>\n<p>居中一个浮动元素和绝对定位元素的居中实现特别相似，需要重点注意的是这里宽度是必须的，确定容器的宽高，\n高度可以不设，设置div的上外边距和左外边距分别是宽高的一半。</p>\n<p>实现居中的关键就在于 margin设置与 position:relative。</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.div</span> <span class=\"token punctuation\">{</span>\n    float：left\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 400px <span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> -200px 0 0 -200px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a href=\"http://codepen.io/runfastlynda/pen/meVLqE\">codepen在线demo</a></p>","frontmatter":{"title":"CSS技巧之居中元素的几种方法","date":"September 15, 2015"}}},"pageContext":{"slug":"/2015-09-15-css-tricks-center-elements/","previous":{"fields":{"slug":"/2015-09-15-sort-css/"},"frontmatter":{"title":"CSS技巧之CSS样式排序","tags":null}},"next":{"fields":{"slug":"/2015-09-16-make-html-more-semantic/"},"frontmatter":{"title":"我理解的html语义化","tags":null}}}}}
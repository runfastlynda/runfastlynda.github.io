{"componentChunkName":"component---src-templates-blog-post-js","path":"/2015-08-13-read-2048-source-code/","result":{"data":{"site":{"siteMetadata":{"title":"runfastlynda"}},"markdownRemark":{"id":"caee5b5d-e479-516f-b3e6-78457521b59e","excerpt":"源于参加百度ife训练营，我需要设计一个2048的小游戏，就像这样的： 2048游戏截图 有趣的是2048的作者将源码开放，最终在github里得到了项目的源代码，此时萌发了阅读源码的想法，说做就做，下面就是我的笔记了！ 分析2048代码结构 使用  下载到源码。 接着在terminal中使用 命令 tree…","html":"<p>源于参加百度ife训练营，我需要设计一个2048的小游戏，就像这样的：</p>\n<p><img src=\"http://7xjufd.dl1.z0.glb.clouddn.com/blog1.1.png\" alt=\"2048游戏截图\"></p>\n<p>有趣的是2048的作者将源码开放，最终在github里得到了项目的源代码，此时萌发了阅读源码的想法，说做就做，下面就是我的笔记了！</p>\n<h3>分析2048代码结构</h3>\n<p>使用 <code class=\"language-text\">“git clone https://github.com/gabrielecirulli/2048.git”</code> 下载到源码。</p>\n<p>接着在terminal中使用 <code class=\"language-text\">“tree .”</code>命令</p>\n<p><img src=\"http://7xjufd.dl1.z0.glb.clouddn.com/blog1.2.png\" alt=\"tree结构\"></p>\n<p>继续用<code class=\"language-text\">“cloc .”</code>命令统计代码行数</p>\n<p><img src=\"http://7xjufd.dl1.z0.glb.clouddn.com/blog1.3.png\" alt=\"cloc代码分析\"></p>\n<p>代码包含了基本的html，负责样式的css和scss，和js文件。</p>\n<h3>JS文件</h3>\n<p>2048中看代码量也知道这里js文件的重要性，阅读源码还是从这里下手。</p>\n<ul>\n<li>application.js</li>\n</ul>\n<p>这里是一个总控制javascript文件，通过调用GameManager构造函数，来定义一个实例对象，并且输入四个参数。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">GameManager</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> KeyboardInputManager<span class=\"token punctuation\">,</span> HTMLActuator<span class=\"token punctuation\">,</span> LocalStorageManager<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>读上面的代码其实也说明白了这个游戏重要的javascript有哪些，也就是GameManager和输入的参数了。这里的GameManager在game<em>manager.js这个文件中有定义，输入的参数size=4, 而KeyboardInputManager, HTMLActuator,LocalStorageManager这三个参数分别在KeyboardInputManager.js，html</em>actuator.js，local<em>storage</em>manager.js的javascript文件中有定义，后续我们一一介绍。</p>\n<ul>\n<li>game_manager.js</li>\n</ul>\n<p>主要是游戏的管理，包括开始玩的方法，添加tile（页面上动态实现的数字盒子）的方法，移动的方法，游戏结束的判断等等。</p>\n<ul>\n<li>local<em>storage</em>manager.js</li>\n</ul>\n<p>页面中有计分这样的功能，而这个文件主管数据存储，包括当前位置的数据和tile值的数据，分数保存。</p>\n<ul>\n<li>html_actuator.js</li>\n</ul>\n<p>主管绘图和dom操作。</p>\n<ul>\n<li>grid.js和tile.js</li>\n</ul>\n<p>生成grid，随机选取位置。</p>\n<ul>\n<li>KeyboardInputManager.js</li>\n</ul>\n<p>键盘输入控制，移动端滑动手势控制，各个按钮控制</p>\n<ul>\n<li>bind<em>polyfill.js，animframe</em>polyfill.js，classlist_polyfill.js</li>\n</ul>\n<p>带有polyfill后缀的文件通过查询，发现都是为了解决某些浏览器的兼容问题的补丁或者变通方法。现在我们主要关注游戏的业务逻辑以及javascript的一些基础问题，毕竟小白嘛~^_^~</p>","frontmatter":{"title":"2048源代码解读（1）","date":"August 13, 2015"},"fields":{"slug":"/2015-08-13-read-2048-source-code/"}}},"pageContext":{"slug":"/2015-08-13-read-2048-source-code/","previous":{"fields":{"slug":"/2015-07-14-ready-for-new-project/"},"frontmatter":{"title":"开发一个前端项目的正确预备式","tags":["html"]}},"next":{"fields":{"slug":"/2015-08-14-2048-input-mannager/"},"frontmatter":{"title":"2048源代码解读（2）","tags":["源码阅读"]}}}},"staticQueryHashes":["240262808","2841359383"]}
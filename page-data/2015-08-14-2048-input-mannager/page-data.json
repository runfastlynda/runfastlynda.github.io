{"componentChunkName":"component---src-templates-blog-post-js","path":"/2015-08-14-2048-input-mannager/","result":{"data":{"site":{"siteMetadata":{"title":"runfastlynda"}},"markdownRemark":{"id":"33e94907-0898-5bb6-98c3-f257d4b81259","excerpt":"上文介绍了2048源码的宏观情况，下面打算仔细的看看源代码，我自己很感兴趣于键盘控制这一部分，所以决定先阅读input_mannager.js这一部分。 仔细查看了input_mannager.js的源代码发现好多的prototype。那先来看看prototype是什么？ javascript中的prototype…","html":"<p>上文介绍了2048源码的宏观情况，下面打算仔细的看看源代码，我自己很感兴趣于键盘控制这一部分，所以决定先阅读input_mannager.js这一部分。</p>\n<p>仔细查看了input_mannager.js的源代码发现好多的prototype。那先来看看prototype是什么？</p>\n<h3>javascript中的prototype</h3>\n<p>在JavaScript语言中，每一个对象都有一个对应的原型对象，被称为prototype对象。定义在原型对象上的所有属性和方法，都能被派生对象继承。</p>\n<p>那么这里如果修改了prototype对象，变动就立刻会体现在实例对象中。</p>\n<h3>call()</h3>\n<p>JavaScript中this的动态切换，为其创造了巨大的灵活性，但也使得编程变的困难和模糊。input_mannager.js这里运用了call()的方法来固定this的确切指向，确定执行的作用域。</p>\n<p>函数的call方法，可以指定该函数内部this的指向，然后在所指定的作用域中，调用该函数。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\t<span class=\"token function\">func</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>thisValue<span class=\"token punctuation\">,</span> arg1<span class=\"token punctuation\">,</span> arg2<span class=\"token punctuation\">,</span> …<span class=\"token punctuation\">)</span></code></pre></div>\n<p> arg1, arg2是可以传入的参数。</p>\n<h3>input_mannager.js</h3>\n<p>KeyboardInputManager函数有如下结构：</p>\n<p><img src=\"http://7xjufd.dl1.z0.glb.clouddn.com/blog2.1.png\" alt=\"思维导图\"></p>\n<p>打开后我们看到了下面的代码</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>navigator<span class=\"token punctuation\">.</span>msPointerEnabled<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">//这里考虑的是浏览器兼容性的问题</span>\n<span class=\"token comment\">//if里的判断语句是判断用户设备是不是Internet Explorer 10 支不支持msPointer相关事件</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>eventTouchstart    <span class=\"token operator\">=</span> <span class=\"token string\">\"MSPointerDown\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>eventTouchmove     <span class=\"token operator\">=</span> <span class=\"token string\">\"MSPointerMove\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>eventTouchend      <span class=\"token operator\">=</span> <span class=\"token string\">\"MSPointerUp\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>eventTouchstart    <span class=\"token operator\">=</span> <span class=\"token string\">\"touchstart\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>eventTouchmove     <span class=\"token operator\">=</span> <span class=\"token string\">\"touchmove\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>eventTouchend      <span class=\"token operator\">=</span> <span class=\"token string\">\"touchend\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>这是为了统一不同的浏览器中对触摸事件的处理，运用的if判断语句统一命名，为后面的编程做准备。</p>\n<p>接着下一行有这样的代码</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>this指代KeyboardInputManager这个函数，我们从KeyboardInputManager的原型链上找到了对listen的定义，也就是KeyboardInputManager.prototype.listen，那么查看这个对象。</p>\n<p>首先是对键盘的控制</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 对全局进行事件监听，把握键盘方向键的控制</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"keydown\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">var</span> modifiers <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>altKey <span class=\"token operator\">||</span> event<span class=\"token punctuation\">.</span>ctrlKey <span class=\"token operator\">||</span> event<span class=\"token punctuation\">.</span>metaKey <span class=\"token operator\">||</span>event<span class=\"token punctuation\">.</span>shiftKey<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//使用逻辑或|| 把alt，ctrl，meta，shift四个键按下的事件赋给了modifiers;</span>\n\n<span class=\"token keyword\">var</span> mapped    <span class=\"token operator\">=</span> map<span class=\"token punctuation\">[</span>event<span class=\"token punctuation\">.</span>which<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//判断按键是否标准，执行移动的函数</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>modifiers<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mapped <span class=\"token operator\">!==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tevent<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tself<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"move\"</span><span class=\"token punctuation\">,</span> mapped<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 添加R快捷键的行为</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>modifiers <span class=\"token operator\">&amp;&amp;</span> event<span class=\"token punctuation\">.</span>which <span class=\"token operator\">===</span> <span class=\"token number\">82</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tself<span class=\"token punctuation\">.</span><span class=\"token function\">restart</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>有趣的是这里不仅给光标移动映射了上下左右的移动事件，还对常用的游戏按键<code class=\"language-text\">W</code> <code class=\"language-text\">A</code> <code class=\"language-text\">S</code> <code class=\"language-text\">D</code>,还有Vim中的<code class=\"language-text\">H</code> <code class=\"language-text\">J</code> <code class=\"language-text\">K</code> <code class=\"language-text\">L</code>映射了上下左右的移动事件。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> map <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token number\">38</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Up</span>\n\t<span class=\"token number\">39</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Right</span>\n\t<span class=\"token number\">40</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Down</span>\n\t<span class=\"token number\">37</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Left</span>\n\t<span class=\"token number\">75</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Vim up</span>\n\t<span class=\"token number\">76</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Vim right</span>\n\t<span class=\"token number\">74</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Vim down</span>\n\t<span class=\"token number\">72</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Vim left</span>\n\t<span class=\"token number\">87</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// W</span>\n\t<span class=\"token number\">68</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// D</span>\n\t<span class=\"token number\">83</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// S</span>\n\t<span class=\"token number\">65</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span>  <span class=\"token comment\">// A</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>然后是移动端滑动控制</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> touchStartClientX<span class=\"token punctuation\">,</span> touchStartClientY<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> gameContainer <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"game-container\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//定义了页面中game-container这一部分</span>\n\n<span class=\"token comment\">//添加对gameContainer的监听事件</span>\ngameContainer<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>eventTouchstart<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>window<span class=\"token punctuation\">.</span>navigator<span class=\"token punctuation\">.</span>msPointerEnabled <span class=\"token operator\">&amp;&amp;</span> event<span class=\"token punctuation\">.</span>touches<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>event<span class=\"token punctuation\">.</span>targetTouches <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//将多余一个指头的滑动事件忽略</span></code></pre></div>\n<p>对game-container进行事件监听，意味着只有在game-container里的滑动才有效的，接着获取滑动的起始坐标，获取滑动长度等等。</p>\n<p>我们来看重点的判断滑动方向</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>absDx<span class=\"token punctuation\">,</span> absDy<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tself<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"move\"</span><span class=\"token punctuation\">,</span> absDx <span class=\"token operator\">></span> absDy <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>dx <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>dy <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">2</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// (right : left) : (down : up)</span></code></pre></div>\n<p>使用了两次三目运算的方法，比较absDx和absDy的大小，谁大代表在谁的坐标滑动，也就是判断是上下还是左右，如果absDx大，判断dx的正负，正是向右移动，负是向左移动，\n如果是absDy大，判断dy的正负，正是向下移动，负是向上移动。</p>\n<p>举个栗子：</p>\n<p><img src=\"http://7xjufd.dl1.z0.glb.clouddn.com/blog2.2.png\" alt=\"例子\"></p>\n<p>图中absDx和absDy是dx和dy的绝对值,首先可以判断 absDx &#x3C; absDy,那么就在上下两个方向做判断，又因为dy是小于0的，所以这个滑动事件就代表着向上滑动。</p>","frontmatter":{"title":"2048源代码解读（2）","date":"August 14, 2015"},"fields":{"slug":"/2015-08-14-2048-input-mannager/"}}},"pageContext":{"slug":"/2015-08-14-2048-input-mannager/","previous":{"fields":{"slug":"/2015-08-13-read-2048-source-code/"},"frontmatter":{"title":"2048源代码解读（1）","tags":["源码阅读"]}},"next":{"fields":{"slug":"/2015-08-18-2048-local-storage-manager/"},"frontmatter":{"title":"2048源代码解读（3）","tags":["源码阅读"]}}}},"staticQueryHashes":["240262808","2841359383"]}
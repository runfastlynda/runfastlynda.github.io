{"componentChunkName":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js","path":"/2016-08-13-what-different-in-dependencies-and-devDependencies/","result":{"data":{"site":{"siteMetadata":{"title":"runfastlynda","social":[{"name":"twitter","url":"https://twitter.com/runfastlynda"},{"name":"github","url":"https://github.com/runfastlynda"}]}},"blogPost":{"__typename":"MdxBlogPost","id":"4db34bdf-1c92-5138-8a57-f77052eafca5","excerpt":"在package.json文件中，有两个参数，分别是：dependencies和devDependencies，当我们使用npm install之后，他们就会自动下载到node_modules文件夹下面。但是他们是怎么来的呢，他们之间又有什么区别呢？  在我们要用npm…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2016-08-13T00:00:00.000Z\",\n  \"title\": \"dependencies 与 devDependencies 的区别\",\n  \"categories\": [\"npm\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u5728package.json\\u6587\\u4EF6\\u4E2D\\uFF0C\\u6709\\u4E24\\u4E2A\\u53C2\\u6570\\uFF0C\\u5206\\u522B\\u662F\\uFF1Adependencies\\u548CdevDependencies\\uFF0C\\u5F53\\u6211\\u4EEC\\u4F7F\\u7528npm install\\u4E4B\\u540E\\uFF0C\\u4ED6\\u4EEC\\u5C31\\u4F1A\\u81EA\\u52A8\\u4E0B\\u8F7D\\u5230node_modules\\u6587\\u4EF6\\u5939\\u4E0B\\u9762\\u3002\\u4F46\\u662F\\u4ED6\\u4EEC\\u662F\\u600E\\u4E48\\u6765\\u7684\\u5462\\uFF0C\\u4ED6\\u4EEC\\u4E4B\\u95F4\\u53C8\\u6709\\u4EC0\\u4E48\\u533A\\u522B\\u5462\\uFF1F \"), mdx(\"p\", null, \"\\u5728\\u6211\\u4EEC\\u8981\\u7528npm\\u4E0B\\u8F7D\\u67D0\\u4E2A\\u6A21\\u5757\\u7684\\u65F6\\u5019\\uFF0C\\u53EF\\u4EE5\\u4F7F\\u7528\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"\\u2013save\\n\\u2013save-dev\\n\")), mdx(\"p\", null, \"\\u8FD9\\u4E24\\u79CD\\u547D\\u4EE4\\uFF0C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--save\"), \" \\u4F1A\\u628A\\u5BF9\\u5E94\\u7684\\u6A21\\u5757\\u540D\\u6DFB\\u52A0\\u5230dependencies\\u952E\\u503C\\u6570\\u7EC4\\u91CC\\uFF0C\\u800C\\u4F7F\\u7528 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--save-dev\"), \" \\u4F1A\\u628A\\u5BF9\\u5E94\\u7684\\u6A21\\u5757\\u540D\\u6DFB\\u52A0\\u5230devDependencies\\u952E\\u503C\\u6570\\u7EC4\\u91CC\\u3002\\u4F8B\\u5982\\uFF1A\\u5728\\u6211\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/lazybios/emoji-menu\"\n  }), \"emoji-menu\"), \"\\u9879\\u76EE\\u7684package\\u4E2D\\u5199\\u7684\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"{\\n  \\\"name\\\": \\\"emoji-menu\\\",\\n  \\\"version\\\": \\\"0.0.1\\\",\\n  \\\"dependencies\\\": {\\n    \\\"clipboard\\\": \\\"^1.5.10\\\",\\n    \\\"electron-prebuilt\\\": \\\"^1.2.0\\\",\\n    \\\"menubar\\\": \\\"^4.1.1\\\",\\n    \\\"nedb\\\": \\\"^1.8.0\\\"\\n  },\\n  \\\"devDependencies\\\": {\\n    \\\"cz-conventional-changelog\\\": \\\"^1.1.6\\\",\\n    \\\"electron-packager\\\": \\\"^7.0.3\\\"\\n  }\\n}\\n\")), mdx(\"p\", null, \"\\u90A3\\u8FD9\\u4E8C\\u8005\\u7684\\u533A\\u522B\\u5230\\u5E95\\u662F\\u4EC0\\u4E48\\uFF1FdevDependencies \\u4E0B\\u5217\\u51FA\\u7684\\u6A21\\u5757\\uFF0C\\u662F\\u6211\\u4EEC\\u5F00\\u53D1\\u65F6\\u7528\\u7684\\uFF0C\\u6BD4\\u5982 gulp\\uFF0C\\u5B83\\u4EEC\\u4E0D\\u4F1A\\u88AB\\u90E8\\u7F72\\u5230\\u751F\\u4EA7\\u73AF\\u5883\\u3002dependencies \\u4E0B\\u7684\\u6A21\\u5757\\uFF0C\\u5219\\u662F\\u6211\\u4EEC\\u751F\\u4EA7\\u73AF\\u5883\\u4E2D\\u9700\\u8981\\u7684\\u4F9D\\u8D56\\u3002\"));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/2016-08-13-what-different-in-dependencies-and-devDependencies/","title":"dependencies 与 devDependencies 的区别","tags":[],"keywords":[],"date":"August 13, 2016","image":null,"imageAlt":null,"socialImage":null},"previous":{"__typename":"MdxBlogPost","id":"398cdd52-cdb4-5676-a9db-1153942a6272","excerpt":"很多人都推荐使用HTML5 Boilerplate作为项目的默认模板，所以周末特意花了些时间研究了一下。使用方法本文就不赘述了，主要是阅读源码，补充自己的不足。 目录结构 结构就是如此，简单概括一下： 404.html 、 index.html 页面不用多说什么 css…","slug":"/2016-07-04-read-html5-boilerplate/","title":"读源码：HTML5 Boilerplate","date":"July 04, 2016"},"next":{"__typename":"MdxBlogPost","id":"97f46fb6-a321-5467-8345-e2d2e5368f9a","excerpt":"最近看到不少纯 CSS 打造的图案和动画，效果很精巧，也非常有趣，就像这个 大白 ( 作者的原链接在这里 )，其实实现这样的图案有很多重复的技巧。就拿这个大白举例： 先来读一读源代码： HTML CSS 技巧一：清晰的HTML…","slug":"/2016-08-29-pure-css-draw-a-baymax/","title":"CSS画个大白有哪些技巧","date":"August 29, 2016"}},"pageContext":{"id":"4db34bdf-1c92-5138-8a57-f77052eafca5","previousId":"398cdd52-cdb4-5676-a9db-1153942a6272","nextId":"97f46fb6-a321-5467-8345-e2d2e5368f9a"}}}
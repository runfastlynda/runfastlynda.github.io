{"componentChunkName":"component---src-templates-blog-post-js","path":"/2016-08-13-what-different-in-dependencies-and-devDependencies/","result":{"data":{"site":{"siteMetadata":{"title":"runfastlynda"}},"markdownRemark":{"id":"bda6faea-4a53-5660-b58d-fc1e06057969","excerpt":"在package.json文件中，有两个参数，分别是：dependencies和devDependencies，当我们使用npm install之后，他们就会自动下载到node_modules文件夹下面。但是他们是怎么来的呢，他们之间又有什么区别呢？  在我们要用npm…","html":"<p>在package.json文件中，有两个参数，分别是：dependencies和devDependencies，当我们使用npm install之后，他们就会自动下载到node_modules文件夹下面。但是他们是怎么来的呢，他们之间又有什么区别呢？ </p>\n<p>在我们要用npm下载某个模块的时候，可以使用</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">–save\n–save-dev</code></pre></div>\n<p>这两种命令， <code class=\"language-text\">--save</code> 会把对应的模块名添加到dependencies键值数组里，而使用 <code class=\"language-text\">--save-dev</code> 会把对应的模块名添加到devDependencies键值数组里。例如：在我<a href=\"https://github.com/lazybios/emoji-menu\">emoji-menu</a>项目的package中写的：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  &quot;name&quot;: &quot;emoji-menu&quot;,\n  &quot;version&quot;: &quot;0.0.1&quot;,\n  &quot;dependencies&quot;: {\n    &quot;clipboard&quot;: &quot;^1.5.10&quot;,\n    &quot;electron-prebuilt&quot;: &quot;^1.2.0&quot;,\n    &quot;menubar&quot;: &quot;^4.1.1&quot;,\n    &quot;nedb&quot;: &quot;^1.8.0&quot;\n  },\n  &quot;devDependencies&quot;: {\n    &quot;cz-conventional-changelog&quot;: &quot;^1.1.6&quot;,\n    &quot;electron-packager&quot;: &quot;^7.0.3&quot;\n  }\n}</code></pre></div>\n<p>那这二者的区别到底是什么？devDependencies 下列出的模块，是我们开发时用的，比如 gulp，它们不会被部署到生产环境。dependencies 下的模块，则是我们生产环境中需要的依赖。</p>","frontmatter":{"title":"dependencies 与 devDependencies 的区别","date":"August 13, 2016"}}},"pageContext":{"slug":"/2016-08-13-what-different-in-dependencies-and-devDependencies/","previous":{"fields":{"slug":"/2016-07-04-read-html5-boilerplate/"},"frontmatter":{"title":"读源码：HTML5 Boilerplate","tags":null}},"next":{"fields":{"slug":"/2016-08-29-pure-css-draw-a-baymax/"},"frontmatter":{"title":"CSS画个大白有哪些技巧","tags":null}}}}}
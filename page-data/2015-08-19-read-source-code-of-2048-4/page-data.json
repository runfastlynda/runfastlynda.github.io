{"componentChunkName":"component---src-templates-blog-post-js","path":"/2015-08-19-read-source-code-of-2048-4/","result":{"data":{"site":{"siteMetadata":{"title":"runfastlynda"}},"markdownRemark":{"id":"d9174740-0537-5b4a-8a68-784a8efc6ac0","excerpt":"已经阅读完localstoragemanager.js和keyboardinputmanager.js，这次阅读 html_actuator.js。 HTMLActuator函数有如下结构： 在函数的最开始获取了tile-container，score-container，best-container，game…","html":"<p>已经阅读完<a href=\"http://runfastlynda.com/2048-local-storage-manager/\">local<em>storage</em>manager.js</a>和<a href=\"http://runfastlynda.com/2048-input-mannager/\">keyboard<em>input</em>manager.js</a>，这次阅读 html_actuator.js。</p>\n<p>HTMLActuator函数有如下结构：<img src=\"http://7xjufd.dl1.z0.glb.clouddn.com/blog4.1.png\"></p>\n<p>在函数的最开始获取了tile-container，score-container，best-container，game-message的dom节点。</p>\n<p>在HTMLActuator的prototype上定义了actuate方法，值得注意的是这个函数的第一句运用中间变量，固定this的确切指向，确定执行的作用域。防止函数内部的多层this导致this的指向是不确定的。</p>\n<p>紧接着window.requestAnimationFrame()这个方法是用来在页面重绘之前，通知浏览器调用接受的函数。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token class-name\">HTMLActuator</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">actuate</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">grid<span class=\"token punctuation\">,</span> metadata</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    self<span class=\"token punctuation\">.</span><span class=\"token function\">clearContainer</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>tileContainer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//遍历cells，如果存在cell，就添加tile</span>\n    grid<span class=\"token punctuation\">.</span>cells<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">column</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      column<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">cell</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          self<span class=\"token punctuation\">.</span><span class=\"token function\">addTile</span><span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//更新分数</span>\n    self<span class=\"token punctuation\">.</span><span class=\"token function\">updateScore</span><span class=\"token punctuation\">(</span>metadata<span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    self<span class=\"token punctuation\">.</span><span class=\"token function\">updateBestScore</span><span class=\"token punctuation\">(</span>metadata<span class=\"token punctuation\">.</span>bestScore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//判断游戏的输赢</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>metadata<span class=\"token punctuation\">.</span>terminated<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>metadata<span class=\"token punctuation\">.</span>over<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token function\">message</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// You lose</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>metadata<span class=\"token punctuation\">.</span>won<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token function\">message</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// You win!</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>clearContainer方法，addTile方法，updateScore方法，updateBestScore方法，message方法我们在prototype上都可以找到。</p>\n<p>比较重要的是在HTMLActuator的prototype上定义的addTile方法。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token class-name\">HTMLActuator</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">addTile</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">tile</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> wrapper   <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> inner     <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> position  <span class=\"token operator\">=</span> tile<span class=\"token punctuation\">.</span>previousPosition <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> tile<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> tile<span class=\"token punctuation\">.</span>y <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> positionClass <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">positionClass</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> classes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"tile\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tile-\"</span> <span class=\"token operator\">+</span> tile<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span> positionClass<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tile<span class=\"token punctuation\">.</span>value <span class=\"token operator\">></span> <span class=\"token number\">2048</span><span class=\"token punctuation\">)</span> classes<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tile-super\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">applyClasses</span><span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">,</span> classes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  inner<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tile-inner\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  inner<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> tile<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tile<span class=\"token punctuation\">.</span>previousPosition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//确保tile在先前的位置上呈现</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      classes<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span><span class=\"token function\">positionClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> tile<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> tile<span class=\"token punctuation\">.</span>y <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      self<span class=\"token punctuation\">.</span><span class=\"token function\">applyClasses</span><span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">,</span> classes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">//更新位置</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tile<span class=\"token punctuation\">.</span>mergedFrom<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    classes<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tile-merged\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">applyClasses</span><span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">,</span> classes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//通过移动，有合并情况，合并后的tile</span>\n    tile<span class=\"token punctuation\">.</span>mergedFrom<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">merged</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      self<span class=\"token punctuation\">.</span><span class=\"token function\">addTile</span><span class=\"token punctuation\">(</span>merged<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 什么都没有的添加一个新的tile</span>\n    classes<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tile-new\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">applyClasses</span><span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">,</span> classes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 把inner盒子添加wrapper盒子中</span>\n  wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>inner<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 把wrapper放到tileContainer这个盒子里</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tileContainer<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>这里还定义了更新分数的方法，先把新的成绩更新，然后又给加分这一行为添加了动画</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token class-name\">HTMLActuator</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">updateScore</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">score</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">clearContainer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scoreContainer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> difference <span class=\"token operator\">=</span> score <span class=\"token operator\">-</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>score <span class=\"token operator\">=</span> score<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scoreContainer<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//定义了分数更新的动画</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>difference <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> addition <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    addition<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"score-addition\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    addition<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">\"+\"</span> <span class=\"token operator\">+</span> difference<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scoreContainer<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>addition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>其他方法：</p>\n<ul>\n<li>继续游戏\nHTMLActuator.prototype.continueGame</li>\n<li>清除盒子\nHTMLActuator.prototype.clearContainer</li>\n<li>应用css样式\nHTMLActuator.prototype.applyClasses</li>\n<li>获取位置\nHTMLActuator.prototype.normalizePosition</li>\n<li>利用位置确定css样式\nHTMLActuator.prototype.positionClass</li>\n<li>更新最好的成绩\nHTMLActuator.prototype.updateBestScore</li>\n<li>游戏结束时弹出的信息\nHTMLActuator.prototype.message</li>\n<li>继续游戏时弹出信息清除掉\nHTMLActuator.prototype.clearMessage</li>\n</ul>","frontmatter":{"title":"2048源代码解读（4）","date":"August 19, 2015"}}},"pageContext":{"slug":"/2015-08-19-read-source-code-of-2048-4/","previous":{"fields":{"slug":"/2015-08-18-2048-local-storage-manager/"},"frontmatter":{"title":"2048源代码解读（3）","tags":["源码阅读"]}},"next":{"fields":{"slug":"/2015-08-26-read-source-code-of-2048-5/"},"frontmatter":{"title":"2048源代码解读（5）","tags":["源码阅读"]}}}}}
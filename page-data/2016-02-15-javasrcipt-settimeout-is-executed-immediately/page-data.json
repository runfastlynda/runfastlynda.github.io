{"componentChunkName":"component---src-templates-blog-post-js","path":"/2016-02-15-javasrcipt-settimeout-is-executed-immediately/","result":{"data":{"site":{"siteMetadata":{"title":"runfastlynda"}},"markdownRemark":{"id":"79eb5b65-8e84-5a82-b765-232017a1a740","excerpt":"我们都知道setTimeout是用来延时执行的，可有时确定了延迟时间，延迟执行的函数确立即执行了，这到底是为什么呢？下面分两种情况进行分析： 情况一 重点就是不是test，而是test()，这样浏览器解码的时候扫到这一行的代码直接就执行了！ setTimeout…","html":"<p>我们都知道setTimeout是用来延时执行的，可有时确定了延迟时间，延迟执行的函数确立即执行了，这到底是为什么呢？下面分两种情况进行分析：</p>\n<h3>情况一</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">setTimeOut</span><span class=\"token punctuation\">(</span>  <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100000</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"it's A good question\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>重点就是不是test，而是test()，这样浏览器解码的时候扫到这一行的代码直接就执行了！</p>\n<p>setTimeout 的第一个参数使用字符串而非函数的话，会引发内存泄漏。</p>\n<h3>情况二</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sam chen'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2200000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>立即执行了。而不是我们所预想的，会在至少 2200000000ms 后触发。</p>\n<p>原因是这样的：</p>\n<p>setTimeout 的第二个参数 timeout 的最大值是 21474836472，我们的设定值超过它，回调函数就会立即执行。</p>","frontmatter":{"title":"JavaScript setTimeout 为什么立即执行了","date":"February 15, 2016"}}},"pageContext":{"slug":"/2016-02-15-javasrcipt-settimeout-is-executed-immediately/","previous":{"fields":{"slug":"/2016-01-16-sort-algorithm-by-javascript/"},"frontmatter":{"title":"常用排序算法之JavaScript实现","tags":null}},"next":{"fields":{"slug":"/2016-03-12-use-border-make-triangle/"},"frontmatter":{"title":"巧用border实现梯形和三角形","tags":null}}}}}